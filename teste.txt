function Show-Tree {
    param (
        [string]$Path = ".",
        [string]$Prefix = ""
    )

    $items = Get-ChildItem -LiteralPath $Path -Force |
        Where-Object {
            -not $_.Attributes.ToString().Contains("Hidden") -and
            -not ($_.Name -like ".*")
        }

    $lastIndex = $items.Count - 1

    for ($i = 0; $i -lt $items.Count; $i++) {
        $item = $items[$i]
        $isLast = ($i -eq $lastIndex)
        $branch = if ($isLast) { "└── " } else { "├── " }

        Write-Host "$Prefix$branch$($item.Name)"

        if ($item.PSIsContainer) {
            $newPrefix = if ($isLast) { "$Prefix    " } else { "$Prefix│   " }
            Show-Tree -Path $item.FullName -Prefix $newPrefix
        }
    }
}

# Executa
Show-Tree


--------------


<powershell>
# Iniciar e configurar SSM
Set-Service -Name AmazonSSMAgent -StartupType Automatic
Start-Service AmazonSSMAgent

# Habilitar RDP
Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0

# Liberar porta 3389 no firewall
Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

# Ativar conta Administrator
net user Administrator /active:yes

# (Opcional) Criar novo usuário administrador
net user DevOpsRecovery 1q2w3e4r5t! /add
net localgroup Administrators DevOpsRecovery /add


-----------

aws imagebuilder import-disk-image \
  --name "windows11-enterprise-24H2" \
  --semantic-version "1.0.0" \
  --description "Importação de ISO Windows 11 Enterprise 24H2" \
  --platform Windows \
  --os-version "Microsoft Windows 11" \
  --execution-role "arn:aws:iam::123456789012:role/AWSServiceRoleForImageBuilder" \
  --infrastructure-configuration-arn "arn:aws:imagebuilder:sa-east-1:123456789012:infrastructure-configuration/windows11-import-infra" \
  --uri "s3://meu-bucket/path/Win11_24H2_English.ISO" \
  --tags Key1=Value1,Key2=Value2 \
  --client-token "import-win11-$(date +%Y%m%d)" \
  --region sa-east-1


# Log para validação
"SSM e RDP habilitados via user-data em $(Get-Date)" >> C:\ssm_user_data_log.txt
</powershell>

